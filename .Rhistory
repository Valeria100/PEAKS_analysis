samples_file <- read.csv("AR.csv")
getwd()
samples_file <- read.csv(paste(getwd(),"AR.csv",sep="/"))
samples_file <- read.csv(paste(getwd(),"Shamith/AR.csv",sep="/"))
head(samples_file)
class(samples_file$tissue)
levels(samples_file$tissue)
samples_file[which(samples_file$tissue==LuCAP),"tissue"] <- "LNCaP"
samples_file[which(samples_file$tissue=="LuCAP"),"tissue"] <- "LNCaP"
levels(samples_file$tissue)
samples_file <- read.csv(paste(getwd(),"Shamith/AR.csv",sep="/"))
levels(samples_file$tissue)
levels(samples_file$tissue)[which(levels(samples_file$tissue)=="LuCAP")] <- "LNCaP"
levels(samples_file$tissue)
levels(samples_file$tissue)
head(samples_file)
samples_groups <- lapply(levels(samples_file$tissue), function(i) samples_file[which(samples_file$tissue==i),])
samples_groups
samples_file <- read.csv(paste(getwd(),"Shamith/AR.csv",sep="/"))
levels(samples_file$tissue)
# #     Substitute LuCAP with LNCaP - same thing
# levels(samples_file$tissue)[which(levels(samples_file$tissue)=="LuCAP")] <- "LNCaP"
levels(samples_file$tissue)
#     Group the samples per tissue/cell type
samples_groups <- lapply(levels(samples_file$tissue), function(i) samples_file[which(samples_file$tissue==i),])
samples_groups
samples_groups[[1]]
samples_group_data <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) read.table(paste(getwd(),"/peaks/",j,"_trim.bl_peaks.narrowPeak",sep=""))))
file_names <- list.files(paste(getwd(),"/peaks",sep=""))
file_names
file_names <- list.files(paste(getwd(),"/peaks",sep=""),full.names = TRUE)
file_names
grep("narrowPeak",file_names)
file_names_bed <- file_names[grep("narrowPeak",file_names)]
file_names_bed
samples_corr_filepath <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
samples_corr_filepath
samples_groups[[1]]
samples_corr_filepath[[1]]
samples_corr_filepath <- lapply(samples_groups, function(i) file_names_bed[grep(i$ID,file_names_bed)])
samples_corr_filepath
samples_corr_filepath <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
length(samples_corr_filepath)
length(samples_groups)
samples_corr_filepath[[1]]
samples_corr_filepath[[2]]
samples_corr_filepath[[3]]
samples_corr_filepath[[4]]
samples_groups[[1]]
samples_groups[[2]]
samples_groups[[3]]
samples_groups[[4]]
class(samples_corr_filepath[[2]])
class(samples_corr_filepath[[4]])
class(samples_corr_filepath[[1]])
unlist(samples_corr_filepath[[2]])
?sapply
samples_file <- read.csv(paste(getwd(),"samples_file.csv",sep="/"))
head(samples_file)
levels(samples_file$tissue)
samples_groups <- lapply(levels(samples_file$tissue), function(i) samples_file[which(samples_file$tissue==i),])
samples_groups
file_names <- list.files(paste(getwd(),"/peaks",sep=""),full.names = TRUE)
file_names
file_names_bed <- file_names[grep("narrowPeak",file_names)]
file_names_bed
samples_corr_filepath <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
samples_corr_filepath
samples_group_data <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) read.table(paste(getwd(),"/peaks/",j,"_trim.bl_peaks.narrowPeak",sep=""))))
samples_corr_filepath
unlist(samples_corr_filepath[[1]])
samples_corr_filepath[[1]]
samples_corr_filepath1 <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
samples_corr_filepath <- lapply(samples_corr_filepath1, function(i)
sapply(i, function(j) if(length(j)==0){NA}))
samples_corr_filepath
samples_corr_filepath <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
samples_corr_filepath <- lapply(samples_corr_filepath, function(i)
sapply(i, function(j) if(length(j)==0){NA}))
samples_corr_filepath
samples_corr_filepath <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
samples_corr_filepath <- lapply(samples_corr_filepath, function(i)
sapply(i, function(j) ifelse(length(j)==0,NA,j)))
samples_corr_filepath
samples_corr_filepath <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
samples_corr_filepath[[18]]
samples_info <- lapply(1:length(samples_groups), function(i) cbind(samples_groups[[i]],unlist(samples_corr_filepath[[i]])))
samples_corr_filepath <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
samples_corr_filepath <- lapply(samples_corr_filepath, function(i)
sapply(i, function(j) ifelse(length(j)==0,NA,j)))
samples_corr_filepath
samples_groups
length(samples_corr_filepath)
samples_corr_filepath
samples_info <- lapply(1:length(samples_groups), function(i) cbind(samples_groups[[i]],samples_corr_filepath[[i]]))
samples_info
colnames(samples_info[[1]])
colnames(samples_info[[2]])
for(i in 1:length(samples_info)){
colnames(samples_info[[i]]) <- c(colnames(samples_info[[1]])[-length(colnames(samples_info[[1]]))],"filePath")
}
colnames(samples_info[[1]])
colnames(samples_info[[18]])
samples_group_data <- lapply(samples_info, function(i)
sapply(i$filePath, function(j) read.table(paste(getwd(),"/peaks/",j,sep=""))))
samples_group_data <- lapply(samples_info, function(i)
sapply(i$filePath, function(j) read.table(j)))
head(samples_info[[18]])
head(samples_info[[18]]$filePath)
samples_group_data <- lapply(samples_info, function(i)
sapply(i$filePath, function(j) read.table(as.character(j))))
samples_group_data <- lapply(samples_info, function(i)
sapply(i$filePath, function(j) ifelse(is.na(j),NA,read.table(as.character(j)))))
samples_group_data[[1]]
samples_info[[1]]
rm(samples_group_data)
samples_group_data <- vector("list", length(samples_info))
for(i in 1:length(samples_info)){
samples_group_data[[i]] <- vector("list", nrow(samples_info[[i]]))
for(j in 1:nrow(samples_info[[i]])){
if(is.na(samples_info[[i]]$filePath[j])){
samples_group_data[[i]][[j]] <- NA
}else{
samples_group_data[[i]][[j]] <- read.table(as.character(samples_info[[i]]$filePath[j]))
}
}
}
samples_group_data[[1]]
samples_group_data[[1]][[1]]
head(samples_group_data[[1]][[1]])
samples_group_data[[1]][[1]]
samples_info[[1]]
head(samples_group_data[[1]][[1]])
samples_info[[1]]$filePath[1]
file_names_bed <- file_names[grep("_peaks.xls",file_names)]
samples_corr_filepath <- lapply(samples_groups, function(i)
sapply(i$ID, function(j) file_names_bed[grep(j,file_names_bed)]))
samples_corr_filepath <- lapply(samples_corr_filepath, function(i)
sapply(i, function(j) ifelse(length(j)==0,NA,j)))
samples_info <- lapply(1:length(samples_groups), function(i) cbind(samples_groups[[i]],samples_corr_filepath[[i]]))
for(i in 1:length(samples_info)){
colnames(samples_info[[i]]) <- c(colnames(samples_info[[1]])[-length(colnames(samples_info[[1]]))],"filePath")
}
?read.table
samples_group_data <- vector("list", length(samples_info))
for(i in 1:length(samples_info)){
samples_group_data[[i]] <- vector("list", nrow(samples_info[[i]]))
for(j in 1:nrow(samples_info[[i]])){
if(is.na(samples_info[[i]]$filePath[j])){
samples_group_data[[i]][[j]] <- NA
}else{
samples_group_data[[i]][[j]] <- read.table(as.character(samples_info[[i]]$filePath[j]),skip=26,header=TRUE)
}
}
}
i<-1
samples_group_data <- vector("list", length(samples_info))
samples_group_data[[i]] <- vector("list", nrow(samples_info[[i]]))
for(j in 1:nrow(samples_info[[i]])){
if(is.na(samples_info[[i]]$filePath[j])){
samples_group_data[[i]][[j]] <- NA
}else{
samples_group_data[[i]][[j]] <- read.table(as.character(samples_info[[i]]$filePath[j]),skip=26,header=TRUE)
}
}
samples_group_data[[1]][[1]]
head(samples_group_data[[1]][[1]])
-log10(0.05)
-log10(0.001)
-log10(0.01)
-log10(-0.01)
min(samples_group_data[[1]][[1]]$X.log10.pvalue.)
-log10(0.0001)
-log10(0.00001)
-log10(0.000001)
-log10(0.000005)
-log10(0.000006)
-log10(0.000007)
-log10(0.000004)
-log10(0.000003)
-log10(0.0000035)
-log10(0.0000034)
-log10(0.0000033)
-log10(0.00000335)
rm(intersect_group)
write.table(samples_group_data[[1]][[1]],file="temp1.bed")
write.table(samples_group_data[[1]][[2]],file="temp2.bed")
system("bedtools intersect -a temp1.bed -b temp2.bed -wa -wb > intersected_temp12.bed")
write.table(samples_group_data[[1]][[1]],file="temp1.bed", rownames=FALSE)
write.table(samples_group_data[[1]][[2]],file="temp2.bed",rownames=FALSE)
write.table(samples_group_data[[1]][[1]],file="temp1.bed", row.names=FALSE)
write.table(samples_group_data[[1]][[2]],file="temp2.bed",row.names=FALSE)
system("bedtools intersect -a temp1.bed -b temp2.bed -wa -wb > intersected_temp12.bed")
write.table(samples_group_data[[1]][[1]],file="temp1.bed", quote=FALSE, col.names=FALSE, row.names=FALSE)
write.table(samples_group_data[[1]][[2]],file="temp2.bed", quote=FALSE, col.names=FALSE, row.names=FALSE)
system("bedtools intersect -a temp1.bed -b temp2.bed -wa -wb > intersected_temp12.bed")
write.table(samples_group_data[[1]][[1]],file="temp1.bed", quote=FALSE, col.names=FALSE, row.names=FALSE,sep="/t")
write.table(samples_group_data[[1]][[2]],file="temp2.bed", quote=FALSE, col.names=FALSE, row.names=FALSE,sep="/t")
system("bedtools intersect -a temp1.bed -b temp2.bed -wa -wb > intersected_temp12.bed")
write.table(samples_group_data[[1]][[1]],file="temp1.bed", quote=FALSE, col.names=FALSE, row.names=FALSE,sep="\t")
write.table(samples_group_data[[1]][[2]],file="temp2.bed", quote=FALSE, col.names=FALSE, row.names=FALSE,sep="\t")
system("bedtools intersect -a temp1.bed -b temp2.bed -wa -wb > intersected_temp12.bed")
head(samples_group_data[[1]][[1]])
write.table(samples_group_data[[1]][[1]][,c(1,2,3)],file="temp1.bed", quote=FALSE, col.names=FALSE, row.names=FALSE,sep="\t")
write.table(samples_group_data[[1]][[2]][,c(1,2,3)],file="temp2.bed", quote=FALSE, col.names=FALSE, row.names=FALSE,sep="\t")
system("bedtools intersect -a temp1.bed -b temp2.bed -wa -wb > intersected_temp12.bed")
